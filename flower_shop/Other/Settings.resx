<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>34, 15</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAIQAABtbnRyUkdCIFhZ
        WiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAA
        AHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAA
        AChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAA
        AFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAA
        AAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAA
        E9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAA
        ABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMAAQEBAQEBAQEBAQEBAQEBAgIBAQEB
        AwICAgIDAwQEAwMDAwQEBgUEBAUEAwMFBwUFBgYGBgYEBQcHBwYHBgYGBv/bAEMBAQEBAQEBAwICAwYE
        AwQGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBv/AABEIAJgB
        KQMBIgACEQEDEQH/xAAaAAEBAQEBAQEAAAAAAAAAAAAEBQMAAgEJ/8QARxAAAQMCAwUFBAcDCQkBAAAA
        AQACEQMhMTJBBRJRYXEEM4HB0SJykfATJCVCVJShFHSxFSNSVYKTldLhBjVERXN1hJLxwv/EAB4BAQEB
        AQACAgMAAAAAAAAAAAYFBAMCCgEIAAcJ/8QALREAAgICAQMDBAEEAwEAAAAAAQIAAwQRIQUSMSIyQQYT
        kdGhQ1HS8BZCgWH/2gAMAwEAAhEDEQA/APyOgc/ivq9uY5okiyzInj8V+plCr8T3uXb5nEEixgrCSdSt
        4HP4rw5oAJA/VaK+3XiZLbVZYZ7GzMX4ysn5St3HGRphPRYui82HVdO3Z4k4etTDPylHdlKSQIvfxQ6l
        nuAwnBaaKdg7kbLUwFXMVi/KU2oxu650XAxlDIkQtddRVeIetk6rr7yM+Lk3MYpz2Au4tLsJRKgHtCMA
        tuPjljsw5mHXElVB7Z5o7mNO84i4NjKXUA9o6yjOwd1W9URXEHZnsk2tO8Y4+aBUAL4NwTf4qhVzFHc1
        lzFxrKoAVqw4hHLUlTJtRoB3YtGCn1hul0WVGpndwmyFUEuuLF0FV6TX3DiDchG7DJzwIJ14lTKol19Q
        q1YAEgYAceam1BLh70FWKgjMOINzkOjJb2j6SItvWRazWyTF4xVKq1ocTEcDKn1hLjNhF5Ks0DR4gXqS
        qoO5HqiTGmhQX0/bmBY4yqlYAEwAOXBEcLEnEYFI8LtC8iAs5VZTJVdoBNvmVKrQXHUH1ViqJe4HCVMr
        NEugYGyR4yox3qAOoJ6TqSnsb9ILa8eaHXa3eNra35qq9jYLouNZU6sJcRzSHERdeIEzUPYZIfmEEiea
        xqsgEm/NMexv0mH3rLCriRpyV+hF7hxB2RVpDuSaoNziQblFexpBdF9bqg9oLo+6TgjVGtDiALcJVqup
        WO4Oza9NsSXUkYGLrE3EEyDxS6jWkXGqwc1u6SPjK0kJ9wQ7kL2wTm+0bwJuFm5rS2YsQlOAgnXqsH5S
        tLUqwGhIWR4hS0NbbQLDcHEpLrtJ4rFd6alVZMn7TvJLTJJ6lHi88kggGxXhzW7pt+q/mGKgRPbdcjWp
        kBAA4BfH5Svuo6FfH5Sui1KBMFnp4mDsD0RQd7enDgl4oz7Otq6PBaqalYTBZ3IsLVO64gGABxRyAXSb
        yE2oxpD3EX0MokAfDiu32WUaEkXMW3CVcxGnCVg5oAMC/Vb1BNQTxwnmj1SQ+BMQbSteOAq6Ih+9wogn
        tO8LWB4odQe24aSk1HHfNyI5rHdBJkarfSAQdQ1lts7kyo0b+7FibieaLUaA5zQLThKoVWt+kw0OvNBf
        m6i67ChmIMK5pHbqTK7QCSB+vNFcLHonVAC+DcE+aNUaA4gCypY9QYjcI5h7QRJD71CDxRqrRveNk6u1
        oJIEGcZRHiQScQrVdSqwhHKUqpEmVQC488VPrNF4EGTgqNXOUGpdw94qzQi7gvP5Bk94kE68VOqtxOs3
        KqVgGl0WU2oTvAT95XMdUJAgnqPbrmTXs3nGYhCrADeAtCp1M7uRU+qAXHnikOKiAT9fdQ7dHUkPvUI5
        wh1WNkgjrfmqFZoDnkCCDxRHgEEnHjKS4NSsIBzkJB1JlRoBLfjdTa7QC4xrZU6lz4IFQAv3SJEwUior
        RPI3AuYNLJzmtMui4OMoVUAG3FU6zQ3eAEBTa2J6hXcYIRvUGZnsMnVABJ1BsjPAIJOPFPc0EOtqgPz7
        uk4KouhoCDsvzCuY0ski8DVAqAhxAw4KhU9kkCY4SjOaN10iSttFG+TDmWCNwZAM88UV+LRoTcKg5rQD
        bTiiuY2JjDmt2qydah3JYLDvY3cIA0tdETYEe0ceJXn6OlwH/stC1Ko8SQzBp+zq8OMtNjB1W7mgAkD9
        VlujC8cJX8yEx+2e29ZYNzBeX5Svrgd62UFfDhcWOK+TUB8THewB3MVg8AG972SnBsGI+KFUJ3wJMSu1
        IVFOxJ11odeJ5dJYZ1R3NADjGGF0uAQRoESoYcW6HRaAEb4ka6wAcyfUBLi4YcViQCbibLariRpwWIAH
        hxK7VqmvEgZBB5ga7WguIF+qLo750Ta0Fx1E+aM9oDXkD9V2Udo4EO5PmBeATOsYqc/EdFSeRHhiptTM
        Yw06LRVtuIWzTzAv7wdfNGq5ynOa0nei41lBq5yqNCFCAYRz/dA1G7x5b10GqAAYEWTnn2gOLkKtr0VY
        b7xC2Z4kupepHNEqNG+bYGyVUs8lYuAO84i8YqvT7hA+eQAZMrZj181NrgAmLRhfmqNbOeTgp9US9wOA
        Kv4qEmBeoMHOhAuAO8dZxU+rnKpvAhw6qY+7xOuKQ4tbagbqNLIJOqAGo4G4LrotYBsgCB/qqNVjd82/
        VAqgFxBwSfAUqICzgVEkOzBFqMaHkgJ1ZoBJAiML80R4neJx0STHK7G4AzgSDJtUS4zroptcC5CpVYLz
        jbgUCoAXwcCcJVmvR1qDMs7UiAdg7qFPeP5yeLlVqNaHEAW6oVZjZw14q1j1hgDCOah8wFQAu/tQvDmt
        h1tUpzGmDGo1Xh7AGvMdLreOOBC2XYNGSn540nCV5c0QbWXVc5PA2grzJwkrbRTrkw7lEGCdIqRcCbCV
        os396B84rRUAFIkXu7TP2eMxeCJvZGfZ4AJicJSbayDwLl4exsF0XGsr+Zz1Bfie247jcxc0QTF1kVq4
        eycfisSJ/wDq+AGXwJnuIZJ8dlKK9jYmLjAylkA2xtdEqS1xANuC+dFh6pJscKpmLspWBAJk3PVbPFiV
        jgBJ8Sui9oHIkXIcTCpRZuuduiQOamvBGsRwVapldGBbxUiqTJHEmVoqCEeJEvsHbDvFnHXip9VzpLZM
        cFRflKm1cxXbsWH8qwTF+UqbVHtHhoqTspU+rr7y0UIu96hjLIYw7v8A8lTql6kc1Qf5Ke/vB1W0V/cc
        EQln++EqtAdYYG3xQKgBJnXFPrD2jjiNeaDUzRoFUrArYAwtmnSkSXWABd1tdEOTwCfWAhx5oDh7J9VT
        QKzcQT1JCokyrnd7wQX3qH3k+qBvH1Qngb0676uYg0IGzK2DEwdUAF0cCpLs7fBVq9i5TKoAJIEEYJJi
        AsIL6mwaEq5yp9XOVReAQTrxU6rnKTYSHU/X+epKybXxd86oTjLTyxVCqA5wkYuuhVgG7wEBJMUKmtiA
        c+plBkt4G+Ai1WtD5w8eaW/vB1RK8gm/w6q/R9vY2IHzEIJgKgh5WL2NcCSJtxW7hLd44wLrBw9k4/FW
        6kBXYhLNtVeP7ye+zwNJwR6rnbxaCQJuEh/eeKJVzu95bKUUHZhDK8GYVGN3XOi4GMoic8ey7miuaACQ
        P1W0uh0BDuS4En1O9HzqtFm7O06rRdA3aJFdx3T9pHNbBgYLF+Ur3J4n4ryQCIOC/nW2Pue24xDDcOQC
        IKI8ltQAGxOCS8kPAEgTgvL2C7oEjArk1DD43J2TYSNCeFhUYC0uIExMrV28Abj4I1ZxaGAEgOF14GvX
        kSaxZBzDvndOHwWDid2Ray3ddkmZgarAjS0cF4lNfEj32K0PXc4BgBgOiUSo1u64xcaqhUY0skiS0WKk
        1HO3nN3iQu1VTOPGpDvcciYPylTqsb0jUlUX4FTami011BRzIGU3dMX5Sp9XX3lQfgVPq6+8uoTjiHck
        6Jhn4eHop7+8HXzVB+Hh6Ke/vB181poBDQtn+7/f/kLWzHqP4oFXOVQq5ip1S7vBbyhLiFM0HRMDWwd1
        KA/KU2uT7QQn5SqdSFTBvUnDDiTaucoT8R76bVzlCfiPfVzF+IJzfBgq+LvnVTav3vBUq+LvnVTav3vB
        JMH2wF1DwYV+UqbVzlUn5Sp1S9SOaU4XiBc3lYCpnHvIlUAvMp9Vo38MDa6BV7yORSbEZQBuBuofMm1G
        gVLCAMLoNUAuIKdWJuZvCKQHGSJKt1qHYEQHnEaME5rfozb7vFDflKZXtLRIEYShOHsnH4qzUwRQDA+c
        pJ3J1XOUd4BDibmRdb1sx9eaz3Rz+Ko1oSsJZVg0Yd2HiESpZxAw4LeqSHEAkXGvNZkAmTc9V5AacCHc
        g93MG5jd0Oi4AvK8Jb2NDHQMBa6IqCIpHMit7p+0243h+q8uaADAiNV6dgTJ5QVkSdSY5lfQJ6RWeRPb
        Ttv2p1MXsbdxFxrKG553t25BPFOfgenFBqQS0gAOm5XIhh7RJ4cspJnOw8QiVbug4NwSnZSiVrfR8XAb
        yz3IWHqEy33LqZOylHgzM6rdw9k9MJWDsCVxQn/rItjCfKmR3RRamd3VVHuO6blTKo9s8159rHzIt/Ex
        flKm1NFRdlcL48VOq5o0GC8ewyFksFExflKn1dfeVB+UqbVPtEaLzVSBDmU40Zg/Dw9FPf3g6+aovwKm
        1rOkY73mtFKEncM5x2dw9XOVOfiOiU9zi4STfFFqj2ui2d4DAQnl2qyGTq+LvnVDflKZXxd86ob8pVSt
        gSILzuVMm1c5Qn4j302rnKE/Ee+rWL8Qbm+DBV8XfOqm1fveCpV8XfOqm1fveCSYPtgLqHgwr8pU5/eD
        r5qi/KVOf3g6+aU4XiBszxDVc5U6r3ngf4qjVzlTqveeB/ikeL8QJ1DyZPeAXAG4MSj1AGuIAgJLs7fB
        Hq5ykGL8QHne0yfUAL4NwTdErANkAQP9Ux/eDr5otUAuM/xVUeVgnOcAagHU2G5EmRqjVAGuIAgJT7Pg
        TE4SjVcxVer2QhlVtqT6gBqQcJ80eoSHEAkDqkv7zxRH5ivj+sIcySK+DPDyd03PxWC2flKxVJPEiO47
        p+0rsHcisSJW5FjzIleXNABIH6r6M207PdPbNf2kf3mLiIPRFe1sExfQpLxYlYOylY+xP7SfaHVdbhnz
        BtZHqAEXuRlukOEMIv1lGeLa4cVxvRe3xJz2bB3MsZBuJRKlnEDDglNwHAi6LVzlTVqLHiT2sHbA1HOB
        gEwSVgQCZNz1WlQnfcNAbLJ2Ur4ZCh5ke9wYSpZ7gMJwR6jG7rnReMZSngQTrxU+q50lsmOC8ZCyiDMH
        5Sp1S9SOaovylTalnk6r8hvLYLDVSQ4gG04eKBWx/teaVUcTUudfNErZvHzWilwOIbyz3KTAOzt8EWuY
        Lo+bpTs7fBFr4u+dVp+2SwMG5TaUiSqriXEErB+UrepepHNFqkhxANpw8VRoO2hTOHogKucoT8R76bVz
        lCfiPfV7F+INzfBgq+LvnVTav3vBUq+LvnVTav3vBJMH2wF1DwYV+Uqc/vB181RflKm1c5SnC8QNmnSw
        9XOVOq954H+KpPAIJOPFTqo9spHi/EDZ6k7MM5jd0Oi4AvKBVzlUn5Spj5NQTcapBjfE/X/UW7NiBf3g
        6+aNVzlMrAB5IERgfFGIBuVYVC2jBWahdpNf3g6+aNVzlNqtAfIF5480KrnKp0naQxmDQMA/vB180R+Y
        pb+8HXzRH5ivz+sITz/dM35SsV5qOcHEAmOCyk8T8VSTxIL+6ftm5oAJA/VYvylbuHsnH4rB0Q5fS8hC
        nAntn2OPMO/KUR8ziYIwSnixN/igPcd+JtKnEKp8TBdkKRrU+OuyeICO82KQ7LHLBHfh4LjaqMviSiQV
        gKj3NdAcQBgFkSSZJkr3UEOKxcYaYUtlCgkSa7doIMK+9Q+8jVSQ4gG04eK9Pc76Q3OZc8Agk3PFZmQ2
        nYki9xAvc7fiTBOCJVzlJf3nijVc5XBkKHmRL3DQT3O34kwTgiVc5SX94OvmjVc5XjDWWSzQD+8HXzRa
        2Y9R/FKf3g6+aLWxd0XalCTuHMhxorJ1UkXFiAiVCSCSZKRVJIdOhRn5StosUECEstDomTn94Ovmi1sx
        6j+KTVzlCqElwk/eW6n0mFM47TUJVzlCfiPfTK2Y9fNBeT9IRoHK9iEEQXnMAdQlfF3zqptX73gqVa8k
        /wBFSajiTc4i6SYZCrA3UlKiYvylTaucqk/KVPqi5Ou8k+E41AuYpZDDvylTaucqk4eyRyU6pepHNI8V
        xxBWdW2iJg/KVNf3nU4qs5rd0Tq3ip1YAOJAEjVX8WxdgQJ1Co93MBWBLyNP9Vg9oDHECDHFKIm5E3sZ
        0RK8jeAMCMFaS5VAEE9Q7SeIJ4BBJueKnVc5VE3YeMXU596hB/pLfVaqjRhLNUmAf3g6+aI/MVQqNaH4
        YIFUDeOPgV1B3cIRyx3txA1L1I5r7uN4fqvjx/ODkeK9qirACQrFKtP2udlKO4CHdFu8ANJvYcUMuJxJ
        X1D+wqqZ7Y9raEK9zt/dkxOHis3sbmi41lfX3eOa+VLMcQThx5qY9Kn5ktz3qTMXYEyIi1kCq5wMScTq
        lyYibIVXMVNyddvEwNYqJzMHgEE68Vg/KUh+Uo78pUph3AiS7blYEyZUzu6rwSYxOI1Xupnd1WTspXIV
        tWp3JNh7tmGf3g6+aNVzleqrnb5ucVg8kgkkzxWO1gzSFc4WFf3g6+aNVzlfarnb+JssXkkEkmeK5w9k
        uNwdckEkWI9URxJBJMmFrVcS4glHebeC7V2Ki6MM5TgbaCcAS4HihPJmJtGCU8nfiTBN/ijVR7ULvWRa
        dj4hfMvQLqT6ucoNTOPeTqucoNTOPeVGtgSBCuWdrCVsx6j+KA/vT7yfWzHr5qdWs4kWPFXMRwOILz0J
        O4Z1yZU6s0C4F4VBBri7vnVJMWwagrqI+6OIN+UqfV195UHZSptUkOPCUlwWDCBMz0KZk7A9EUsYTJF+
        MpRw4g43RXEh8XAJwlI8dgpEE59o34hahIsOAsp9QB1S+BOHin1rON4HVCf3gHAq9isC24RzCvbyISoA
        wwOU/FBqAF4BEgnjzT62Y6//AFAfH0gGk2VkcsNQPmBCd6hKo3S6MIwUp/en3lWqiXEG8Y3U2s0BzyBB
        Bst3eAwhDMUWqSIOrnKn1c5VB4kOJxBsVPqd6Bocfity82AwXkoUfmAf3g6+a9r1Va3fNv1XiBz+K3jR
        kK1SzT9k6n+0Gw4d9t7Jif6yp/5kf+X9hf11sn/Eqf8AmXLl9Q3vftns6XfWPUyD6V/B/wAoN23th77f
        trZP+I0/8y8Vdv7Eggba2VBw+0afquXKS9zFtTB/zDqf2SO1fwf8oV23tibp+2dlf4jT9VgdubCcZO2N
        lE/9xp/5ly5TL7G7DJ131f1Lt9q/g/5QlXbuxQTG2dlxP9YU+PVCqbe2MLDbOy4JP/MKfquXKcHOzJTf
        V3Uuw+lfwf8AKGdtrYp3j/K+yyZt9oM9Vi/bext0/a+zPz7PVcuX5Y5KzCfq3qXb7V/B/cm1dt7G3j9r
        7M/Ps9Vi/bWxt0/a2zPz7PVcuU0sS0hZH1X1Hn0r+D+5Oq7Z2PvH7W2b+eZ6rF22dj7p+1dm/nmeq5cv
        EMZBv+qeoEn0r+D+5OftjZBf/vXZsTf68z1Rau2dkh8Dauzo/fmceq5cvwk7h7K+ps81n0r+D+4GrtjZ
        O+T/ACps786z1Qqm2Nlmpfamz4n8az1XLlsxGPbCmX9SZxPtX8H9wtXa2yt4/aez/wA6z1Qqm1dl7w+0
        uwZvxjPVcuW2pz3yDlfUWb9v2r+D+4SttXZZcY2l2A3/ABjOPVT6+1NmEujaPYT/AOWzj1XLlYotZWEJ
        5v1Bm6PpX8H9wbtq7Mg/aPYZ/fGeqDU2ns4m+0OxH2vxbcPiuXK/i3vxBeV17M7TwP5/czftHZe6ftDs
        P5xvqgVO37MLh9f7EQXfi2+q5ckuBkOBCGX1nJNZ9I/n9w1TaGzQ4gdv7FH7231R3dv2bBce3diLhgf2
        tvquXJDTlWbHAg3M6reX8D+f3A1NobPNQfX+xwdP2pvqiVe37ODrdt7HY/im+q5cqa51yEa1DmZ1G4jW
        h/P7mFTt2zt0u/bexz+9N9UJ3bNnAT+2dkkC31pvquXK7jZ1x1wILzuoW88D/f8A2Tqvb+wFx+udlwx/
        aW+qm1e3di9r652XT/iG+q5ctxzrS44EHZedaqcAQju3dih31zsuP4hvqp7+29j+lB/a+zR/128eq5cq
        KZ12xwIKzc20v4H+mHq9t7Hvn632b+/b6rP9t7H+L7N/ft9Vy5blz7teB/v/ALIj5Vnd4E//2Q==
</value>
  </data>
</root>